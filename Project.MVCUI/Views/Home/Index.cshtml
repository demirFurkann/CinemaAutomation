@model ListSeansPageVM

@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sinema Salonu Biletleme</title>
    <style>
        .seat {
            width: 50px;
            height: 50px;
            margin: 5px;
            background-color: #ccc;
            display: inline-block;
            text-align: center;
            line-height: 50px;
            font-size: 18px;
            cursor: pointer;
        }

        .row {
            margin-bottom: 10px;
        }

        .reserved {
            background-color: #f00;
        }

        .selected {
            background-color: #00f;
        }

        .disabled {
            background-color: #666;
        }
    </style>
</head>
<body>

    <h2>Film Listesi</h2>

    @foreach (var film in Model.Films)
    {
        <div class="film-card">
            <img src="@film.ImagePath" alt="@film.MovieName" class="film-image" />
            <div class="film-details">
                <h3>@film.MovieName</h3>
                <p>@film.Duration dakika</p>
                <p>Tür: @film.Type</p>
                <p>@film.Info</p>
            </div>
            <div class="film-seanslar">
                <h4>Seanslar</h4>
                <ul>
                    @foreach (var seans in film.Seanslar)
                    {
                        <li>
                            <a href="@Url.Action("SeansSeats", new { seansId = seans.ID, filmId = film.ID })">
                                @seans.StartTime.ToString("hh:mm")
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    }


    <button id="reserveBtn">Rezerve Et</button>
    <button id="buyBtn">Satın Al</button>
    <button id="cancelBtn">İptal Et</button>

    <script>
        const seats = document.querySelectorAll('.seat');
        let selectedSeats = [];

        seats.forEach(seat => {
            seat.addEventListener('click', () => {
                if (!seat.classList.contains('reserved')) {
                    seat.classList.toggle('selected');
                    const seatNumber = seat.textContent;
                    if (selectedSeats.includes(seatNumber)) {
                        selectedSeats = selectedSeats.filter(item => item !== seatNumber);
                    } else {
                        selectedSeats.push(seatNumber);
                    }
                }
            });
        });

        const reserveBtn = document.getElementById('reserveBtn');
        const buyBtn = document.getElementById('buyBtn');
        const cancelBtn = document.getElementById('cancelBtn');

        reserveBtn.addEventListener('click', () => {
            alert('Seçili koltuklar rezerve edildi: ' + selectedSeats.join(', '));
            selectedSeats = [];
            seats.forEach(seat => seat.classList.remove('selected'));
        });

        buyBtn.addEventListener('click', () => {
            alert('Seçili koltuklar satın alındı: ' + selectedSeats.join(', '));
            selectedSeats = [];
            seats.forEach(seat => seat.classList.remove('selected'));
        });

        cancelBtn.addEventListener('click', () => {
            selectedSeats = [];
            seats.forEach(seat => seat.classList.remove('selected'));
            alert('Seçili koltuklar iptal edildi.');
        });
    </script>
</body>
    </html>
